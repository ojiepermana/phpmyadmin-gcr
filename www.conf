[www]
; Prefix each pool with 'www' since '.' is not allowed in pool names
listen = /run/php/php8.3-fpm.sock
listen.owner = www-data
listen.group = www-data
listen.mode = 0660

; Unix user/group of processes
user = www-data
group = www-data

; Choose how the process manager will control the number of child processes.
pm = dynamic
pm.max_children = 5
pm.start_servers = 2
pm.min_spare_servers = 1
pm.max_spare_servers = 3

; The number of requests each child process should execute before respawning.
; This can be useful to work around memory leaks in 3rd party libraries. For endless request processing specify '0'.
; Equivalent to PHP_FCGI_MAX_REQUESTS
pm.max_requests = 500

; The URI to view the FPM status page. If this value is not set, no URI will be recognized as a status page.
; By default, the status page shows the following information:
;   pool: the name of the pool;
;   process manager: static, dynamic or ondemand;
;   start time: the date and time FPM has started;
;   start since: number of seconds since FPM has started;
;   accepted conn: the number of request accepted by the pool;
;   listen queue: the number of request in the queue of pending connections;
;   max listen queue: the maximum number of requests in the queue;
;   listen queue len: the size of the socket queue of pending connections;
;   idle processes: the number of idle processes;
;   active processes: the number of active processes;
;   total processes: the total number of processes;
;   max active processes: the maximum number of active processes since FPM has started;
;   max children reached: the number of times, the process limit has been reached;
;   slow requests: the number of requests that exceeded the request slow log timeout.
;pm.status_path = /status

; The log file for slow requests
;slowlog = /var/log/php-fpm/www-slow.log

; The timeout for serving a single request after which the worker process will be killed.
; This option should be used when the 'max_execution_time' ini option does not stop script execution for some reason.
; '0s' means 'off'.
;request_terminate_timeout = 0

; The timeout for serving a single request after which a PHP backtrace will be dumped to the 'slowlog' file.
; A value of '0s' means 'off'.
;request_slowlog_timeout = 0
